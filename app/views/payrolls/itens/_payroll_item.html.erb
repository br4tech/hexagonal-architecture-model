<div class="page">
  <div class="page-item">
    <div class=˜columns˜> 
      <input type="checkbox"  class="checkbox chk_all"/>  
      <% if session[:month_selected] + 1 >  Time.now.month || @selected_year > Time.now.year %>  
        <%= link_to root_path, class: 'button is-default reprocess_payroll is-pulled-right', :remote => true do %>
          <span class="icon">
            <i class="material-icons">cached</i>
          </span>
          <span>Reprocessar</span>
        <% end %>  
       <% end %>         
    </div>
    <div class=˜columns˜>
      <% @payrolls.each do |payroll| %> 
        <% unless payroll.payroll_items.last.nil?  %>    
          <div class="card is-fullwidth">
            <header class="card-header" style="height: 60px">          
              <p class="card-header-title">
                <input type="checkbox"  class="checkbox chk_group" value="<%= payroll.id %>"/> &nbsp;&nbsp;                                       
                <%= payroll.contract.contract_combo.client.name %>  
              </p>   
              <% unless payroll.contract.kind == 2 %>        
                <a class="card-header-icon card-toggle">              
                  <i class="material-icons">expand_more</i>
                </a>
              <% end %>                                          
            </header>
            <div class="card-content is-hidden">
            	<div class="content">           
                <% unless payroll.contract.kind == 2 %>             
                  <table class="table is-striped table-item">
                    <thead> 
                      <tr>
                        <th>Periodo</th>
                        <th>Unidade</th>
                        <th>Sala</th>
                        <th>Horas</th>
                        <th>Tipo Reserva</th>
                        <th>Valor</th>
                      </tr>
                    </thead>
                    <tbody>
                      <% payroll.payroll_items.each do | item| %>  
                        <tr>
                          <td>              
                            <%= l(item.period) %>
                          </td>
                          <td><%= item.clinic.office.name %></td>
                          <td><%= item.clinic.code %></td>
                          <td><%= item.hours %></td>
                          <td><%= item.odd? ? "Avulso": "Contrato" %></td>
                          <td><%= "R$ %0.02f\n" %item.amount %></td>
                        </tr>
                      <% end %>
                    </tbody>
                  </table>          
                <% end %>      
              </div>
            </div>
            <footer class="card-footer">
              <div class="card-footer-item">
                <i class="material-icons">date_range</i> 
                Faturamento: <%= l(payroll.revenues_at) %> 
              </div>
              <div class="card-footer-item">
                <i class="material-icons">date_range</i> 
                Vencimento: <%= l(payroll.due_at) %>
              </div>
              <div class="card-footer-item">
                <% unless payroll.contract.kind == 2 %>               
                  <i class="material-icons">monetization_on</i> Valor: <%= number_to_currency(payroll.payroll_items.inject(0.0){ |sum, i| sum + i.amount }.round(1) + payroll.parking_value.to_d, :unit => "R$", :separator => ",", :delimiter => ".") %>
                <% else %>        
                  <i class="material-icons">monetization_on</i> Valor: <%= number_to_currency(payroll.payroll_items.last.amount.round(1) + payroll.parking_value.to_d, :unit => "R$", :separator => ",", :delimiter => ".")%>                             
                <% end %>  
              </div>
            </footer>
          </div> 
        <% end %>     
      <% end %>
    </div>
  </div>
</div>

<script>
  var cardToggles = document.getElementsByClassName('card-toggle');
  for (let i = 0; i < cardToggles.length; i++) {
    cardToggles[i].addEventListener('click', e => {
      e.currentTarget.parentElement.parentElement.childNodes[3].classList.toggle('is-hidden');
    });
  }
   // Selecionar todos checkbox
  $(".chk_all").on("click", function() {  
    if (this.checked) {
      $(".checkbox").each(function() {
        this.checked = true;
      });
    } else {
      $(".checkbox").each(function() {
        this.checked = false;
      });
    }
  });

  $(".export").off("click");

  $(".export").on("click", function() {   
    var payrolls = [];

    $(".chk_group:checked").each(function() {
      payrolls.push(this.value);
    });

    $.ajax({
      type: "POST",
      url: "export_payroll",
      data: { payrolls: payrolls },
      success: function(file_content) {
        var blob = new Blob([file_content], { type: "text/plain" });

        var date = new Date();
        var month = date.getMonth() + 1;

        var d = date.getDate() < 10 ? "0" + date.getDate() : date.getDate();
        var m = month < 10 ? "0" + month : month;
        var r = Math.floor(Math.random() * 10);

        var filename = `CB${d}${m}${r}.REM`;

        if (window.navigator.msSaveOrOpenBlob) {
          window.navigator.msSaveBlob(blob, filename);
        } else {
          var elem = window.document.createElement("a");
          elem.href = window.URL.createObjectURL(blob);
          elem.download = filename;
          document.body.appendChild(elem);
          elem.click();
          document.body.removeChild(elem);
        }
      },
      error: function(xhr, textStatus, error) {
        console.log(error);
      }
    });
  });

  $(".reprocess_payroll").off("click");
  $(".reprocess_payroll").on("click", function(){
    $('.pageloader').addClass('is-active');
    $.ajax({
      type: "GET",
      url: "reprocess_payroll",     
      success: function(data){   
        $('.pageloader').removeClass('is-active');
      },
      error: function(xhr, textStatus, error) {
        $('.pageloader').removeClass('is-active');
      }
    });
  });
</script>